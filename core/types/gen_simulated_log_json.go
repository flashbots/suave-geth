// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/common/hexutil"
)

var _ = (*simulatedLogMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (s SimulatedLog) MarshalJSON() ([]byte, error) {
	type SimulatedLog struct {
		Data   hexutil.Bytes
		Addr   common.Address
		Topics []common.Hash
	}
	var enc SimulatedLog
	enc.Data = s.Data
	enc.Addr = s.Addr
	enc.Topics = s.Topics
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (s *SimulatedLog) UnmarshalJSON(input []byte) error {
	type SimulatedLog struct {
		Data   *hexutil.Bytes
		Addr   *common.Address
		Topics []common.Hash
	}
	var dec SimulatedLog
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Data != nil {
		s.Data = *dec.Data
	}
	if dec.Addr != nil {
		s.Addr = *dec.Addr
	}
	if dec.Topics != nil {
		s.Topics = dec.Topics
	}
	return nil
}
