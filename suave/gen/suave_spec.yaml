types:
  - name: DataId
    type: bytes16
structs:
  - name: DataRecord
    fields:
      - name: id
        type: DataId
      - name: salt
        type: DataId
      - name: decryptionCondition
        type: uint64
      - name: allowedPeekers
        type: address[]
      - name: allowedStores
        type: address[]
      - name: version
        type: string
  - name: Withdrawal
    fields:
      - name: index
        type: uint64
      - name: validator
        type: uint64
      - name: Address
        type: address
      - name: amount
        type: uint64
  - name: BuildBlockArgs
    fields:
      - name: slot
        type: uint64
      - name: proposerPubkey
        type: bytes
      - name: parent
        type: bytes32
      - name: timestamp
        type: uint64
      - name: feeRecipient
        type: address
      - name: gasLimit
        type: uint64
      - name: random
        type: bytes32
      - name: withdrawals
        type: Withdrawal[]
      - name: extra
        type: bytes
      - name: fillPending
        type: bool
  - name: HttpRequest
    fields:
      - name: url
        type: string
      - name: method
        type: string
      - name: headers
        type: string[]
      - name: body
        type: bytes
  - name: SimulateTransactionResult
    fields:
      - name: egp
        type: uint64
      - name: logs
        type: SimulatedLog[]
      - name: success
        type: bool
      - name: error
        type: string
  - name: SimulatedLog
    fields:
      - name: data
        type: bytes
      - name: addr
        type: address
      - name: topics
        type: bytes32[]
functions:
  - name: confidentialInputs
    address: "0x0000000000000000000000000000000042010001"
    description: "Provides the confidential inputs associated with a confidential computation request. Outputs are in bytes format."
    output:
      packed: true
      fields:
        - name: output1
          type: bytes
  - name: newDataRecord
    address: "0x0000000000000000000000000000000042030000"
    description: "Initializes data records within the ConfidentialStore. `AllowedPeekers` specifies which addresses can get data. `AllowedStores` specifies which addresses can set data. Prior to storing data, all bids should undergo initialization via this precompile."
    input:
      - name: decryptionCondition
        type: uint64
      - name: allowedPeekers
        type: address[]
      - name: allowedStores
        type: address[]
      - name: dataType
        type: string
    output:
      fields:
        - name: dataRecord
          type: DataRecord
  - name: fetchDataRecords
    address: "0x0000000000000000000000000000000042030001"
    description: "Retrieves all data records correlating with a specified decryption condition."
    input:
      - name: cond
        type: uint64
      - name: namespace
        type: string
    output:
      fields:
        - name: dataRecords
          type: DataRecord[]
  - name: confidentialStore
    address: "0x0000000000000000000000000000000042020000"
    description: "Handles the storage of data in the confidential store. Requires the caller to be part of the `AllowedPeekers` for the associated bid."
    input:
      - name: dataId
        type: DataId
      - name: key
        type: string
      - name: data1
        type: bytes
  - name: confidentialRetrieve
    address: "0x0000000000000000000000000000000042020001"
    description: "Retrieves data from the confidential store. Also mandates the caller's presence in the `AllowedPeekers` list."
    input:
      - name: dataId
        type: DataId
      - name: key
        type: string
    output:
      packed: true
      fields:
        - name: output1
          type: bytes
  - name: signEthTransaction
    address: "0x0000000000000000000000000000000040100001"
    description: "Signs an Ethereum Transaction, 1559 or Legacy, and returns raw signed transaction bytes. `txn` is binary encoding of the transaction. `signingKey` is hex encoded string of the ECDSA private key *without the 0x prefix*. `chainId` is a hex encoded string *with 0x prefix*."
    input:
      - name: txn
        type: bytes
      - name: chainId
        type: string
      - name: signingKey
        type: string
    output:
      fields:
        - name: output1
          type: bytes
  - name: simulateBundle
    address: "0x0000000000000000000000000000000042100000"
    description: "Performs a simulation of the bundle by building a block that includes it. Outputs indicate if the execution was successful and the Effective Gas Price of the resultant block."
    input:
      - name: bundleData
        type: bytes
    output:
      fields:
        - name: output1
          type: uint64
  - name: extractHint
    address: "0x0000000000000000000000000000000042100037"
    description: "Interprets the bundle data and extracts hints, such as the `To` address and calldata."
    isConfidential: true
    input:
      - name: bundleData
        type: bytes
    output:
      packed: true
      fields:
        - name: output1
          type: bytes
  - name: buildEthBlock
    address: "0x0000000000000000000000000000000042100001"
    description: "Constructs an Ethereum block based on the provided `bidIds`. The construction follows the order of `bidId`s are given."
    input:
      - name: blockArgs
        type: BuildBlockArgs
      - name: dataId
        type: DataId
      - name: namespace
        type: string
    output:
      fields:
        - name: output1
          type: bytes
        - name: output2
          type: bytes
  - name: submitEthBlockToRelay
    address: "0x0000000000000000000000000000000042100002"
    description: "Submits a given builderBid to a mev-boost relay. Outputs any errors that arise during submission."
    isConfidential: true
    input:
      - name: relayUrl
        type: string
      - name: builderBid
        type: bytes
    output:
      packed: true
      fields:
        - name: output1
          type: bytes
  - name: ethcall
    address: "0x0000000000000000000000000000000042100003"
    description: "Uses the `eth_call` JSON RPC method to let you simulate a function call and return the response."
    input:
      - name: contractAddr
        type: address
      - name: input1
        type: bytes
    output:
      fields:
        - name: output1
          type: bytes
  - name: submitBundleJsonRPC
    address: "0x0000000000000000000000000000000043000001"
    description: "Submits bytes as JSONRPC message to the specified URL with the specified method. As this call is intended for bundles, it also signs the params and adds `X-Flashbots-Signature` header, as usual with bundles. Regular eth bundles don't need any processing to be sent."
    isConfidential: true
    input:
      - name: url
        type: string
      - name: method
        type: string
      - name: params
        type: bytes
    output:
      packed: true
      fields:
        - name: output1
          type: bytes
  - name: fillMevShareBundle
    address: "0x0000000000000000000000000000000043200001"
    isConfidential: true
    description: "Joins the user's transaction and with the backrun, and returns encoded mev-share bundle. The bundle is ready to be sent via `SubmitBundleJsonRPC`."
    input:
      - name: dataId
        type: DataId
    output:
      packed: true
      fields:
        - name: encodedBundle
          type: bytes
  - name: signMessage
    address: "0x0000000000000000000000000000000040100003"
    description: "Signs a message and returns the signature. `message` is the message to sign. `signingKey` is hex encoded string of the ECDSA private key *without the 0x prefix*."
    isConfidential: true
    input:
      - name: digest
        type: bytes
      - name: signingKey
        type: string
    output:
      fields:
        - name: output1
          type: bytes
  - name: doHTTPRequest
    address: "0x0000000000000000000000000000000043200002"
    description: "Performs an HTTP request and returns the response. `request` is the request to perform."
    input:
      - name: request
        type: HttpRequest
    output:
      fields:
        - name: response
          type: bytes
  - name: newBuilder
    address: "0x0000000000000000000000000000000053200001"
    description: "Initializes a new remote builder session"
    output:
      fields:
        - name: id
          type: string
  - name: simulateTransaction
    address: "0x0000000000000000000000000000000053200002"
    description: "Simulates a transaction on a remote builder session"
    input:
      - name: session
        type: string
      - name: txn
        type: bytes
    output:
      fields:
        - name: output1
          type: SimulateTransactionResult
